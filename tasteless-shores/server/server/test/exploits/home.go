package main

import (
	"encoding/binary"
	"fmt"
	"log"
	"net"
	"time"

	"ts/server/ts"
)

func home() {
	c, err := net.Dial("tcp", "localhost:31337")
	if err != nil {
		log.Fatal(err)
	}

	fmt.Fprintf(c, "pirates!\x00\x03ccm\x00")
	fmt.Fprintf(c, "\x22\x08")
	log.Println("joined")

	// msgs := make(chan ts.ServerMessageConch, 10)

	go func() {
		for {
			msg, err := ts.ReadServerMessage(c)
			if err != nil {
				panic(err)
			}
			switch msg := msg.(type) {
			case ts.ServerMessageFlag:
				log.Println("Got flag", msg)
				// case ts.ServerMessageBld:
				// 	msgs <- msg
			}
			// log.Printf("%#v", msg)
		}
	}()

	time.Sleep(100 * time.Millisecond)

	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")
	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")
	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")

	time.Sleep(100 * time.Millisecond)

	binary.Write(c, binary.LittleEndian, uint8(0x60))
	binary.Write(c, binary.LittleEndian, uint64(0x01))
	binary.Write(c, binary.LittleEndian, uint64(0x01))
	binary.Write(c, binary.LittleEndian, uint64(0x01))
	binary.Write(c, binary.LittleEndian, uint64(0x01))
	binary.Write(c, binary.LittleEndian, float64(1))
	fmt.Fprintf(c, "\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x37\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")

	time.Sleep(1000 * time.Millisecond)

	binary.Write(c, binary.LittleEndian, uint8(0x22))
	binary.Write(c, binary.LittleEndian, uint8(0x08))

	time.Sleep(1000 * time.Millisecond)

	binary.Write(c, binary.LittleEndian, uint8(0x45))
	binary.Write(c, binary.LittleEndian, float64(636.255798))
	binary.Write(c, binary.LittleEndian, float64(0.655841))
	binary.Write(c, binary.LittleEndian, float64(458.458496))
	binary.Write(c, binary.LittleEndian, float64(1))

	time.Sleep(5000 * time.Millisecond)

	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")

	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")

	binary.Write(c, binary.LittleEndian, uint8(0x76))
	fmt.Fprintf(c, "\x09FLAG_HOME")

	time.Sleep(5 * time.Second)
}
